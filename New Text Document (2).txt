import React, { useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import logo from '../asset/logo.png';
import home from '../asset/home.jpg';
import { FaGoogle, FaFacebook } from "react-icons/fa";

const RegistrationForm = () => {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    birthday: '',
    gender: '',
    address: '',
    password: '',
    confirmPassword: '',
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const validateForm = () => {
    if (formData.password !== formData.confirmPassword) {
      setError('Passwords do not match.');
      return false;
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(formData.email)) {
      setError('Please enter a valid email address.');
      return false;
    }

    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');

    if (!validateForm()) return;

    setLoading(true);

    try {
      const response = await axios.post('http://localhost:4000/api/users/register', formData);
      console.log('Registration successful:', response.data);

      // Reset form data
      setFormData({
        firstName: '',
        lastName: '',
        email: '',
        birthday: '',
        gender: '',
        address: '',
        password: '',
        confirmPassword: '',
      });

      navigate('/Login');
    } catch (error) {
      console.error('Error registering user:', error);
      if (error.response) {
        const { message } = error.response.data;
        setError(message || 'Registration failed. Please try again.');
      } else {
        setError('Network error. Please try again later.');
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex h-screen">
      <div className="w-9/12 p-8">
        <img className='h-16 mb-4' src={logo} alt="Logo" />
        <h1 className='text-green-800 text-4xl font-bold'>Sign Up</h1>
        <div className="bg-gray-100 p-6 rounded-lg shadow-md max-w-sm mt-4 mx-auto">
          <h2 className="text-xl font-bold mb-4">Just some details to get you in!</h2>

          {error && <div role="alert" className="mb-4 text-red-500">{error}</div>}

          <form onSubmit={handleSubmit}>
            {['firstName', 'lastName', 'email', 'birthday', 'gender', 'address', 'password', 'confirmPassword'].map((field, index) => (
              <div className="mb-4" key={index}>
                <label htmlFor={field} className="block text-sm font-medium text-gray-700">
                  {field.charAt(0).toUpperCase() + field.slice(1).replace(/([A-Z])/g, ' $1')}
                </label>
                {field === 'birthday' ? (
                  <input
                    type="date"
                    id={field}
                    name={field}
                    value={formData[field]}
                    onChange={handleChange}
                    required
                    className="mt-1 block w-full p-2 border border-gray-300 rounded-md"
                  />
                ) : field === 'gender' ? (
                  <select
                    id={field}
                    name={field}
                    value={formData[field]}
                    onChange={handleChange}
                    required
                    className="mt-1 block w-full p-2 border border-gray-300 rounded-md"
                  >
                    <option value="">Select Gender</option>
                    <option value="male">Male</option>
                    <option value="female">Female</option>
                    <option value="other">Other</option>
                  </select>
                ) : (
                  <input
                    type={field.includes('password') ? 'password' : 'text'}
                    id={field}
                    name={field}
                    value={formData[field]}
                    onChange={handleChange}
                    required
                    className="mt-1 block w-full p-2 border border-gray-300 rounded-md"
                  />
                )}
              </div>
            ))}

            <button 
              type="submit" 
              className={`w-full ${loading ? 'bg-gray-400' : 'bg-green-500 hover:bg-green-600'} text-white font-bold py-2 rounded-md`}
              disabled={loading}
            >
              {loading ? 'Registering...' : 'Register'}
            </button>
          </form>

          <p className="text-center text-gray-500 text-xs mt-4">
            Already Registered? <a href="/login" className="text-blue-500 hover:underline">Login</a>
          </p>
          <div className="text-center text-gray-700 mt-2">Or</div>
          <div className="flex justify-center mb-4">
            <button className="mx-2">
              <FaGoogle style={{ color: 'black', fontSize: '30px' }} />
            </button>
            <button className="mx-2">
              <FaFacebook style={{ color: 'blue', fontSize: '33px' }} />
            </button>
          </div>
          <div className="text-center text-gray-500 text-xs mt-4">
            <a href="#" className="mr-2 hover:underline">Terms & Conditions</a>
            <a href="#" className="mr-2 hover:underline">Support</a>
            <a href="#" className="hover:underline">Customer Care</a>
          </div>
        </div>
      </div>
      <div className="relative w-1/4 bg-green-800">
        <img className='absolute top-10 left-1/2 transform -translate-x-1/2 h-96 w-auto border rounded-lg' src={home} alt="Home" />
      </div>
    </div>
  );
};

export default RegistrationForm;